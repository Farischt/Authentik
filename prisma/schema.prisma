// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       Int                       @id @default(autoincrement())
  email                    String                    @unique
  firstName                String
  lastName                 String
  password                 String
  isVerified               Boolean                   @default(false)
  role                     Role                      @default(USER)
  accountConfirmationToken AccountConfirmationToken?
  sessionTokens            SessionToken[]
  passwordResetTokens      PasswordResetToken[]
  profile                  Profile?
  createdAt                DateTime                  @default(now())
  updatedAt                DateTime                  @updatedAt
}

// TODO Think about creating a Token table listing all the tokens since they all have the same fields
model AccountConfirmationToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SessionToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  ipAddr    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
